 spring.cloud.gateway.metrics.enabled=true
 management.endpoints.enabled-by-default=true
management.endpoints.prometheus.enabled=true
management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=*
 spring.cloud.gateway.actuator.verbose.enabled=true
#
#management.metrics.export.influx.auto-create-db=true # Whether to create the Influx database if it does not exist before attempting to publish metrics to it.
#management.metrics.export.influx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
#management.metrics.export.influx.compressed=true # Whether to enable GZIP compression of metrics batches published to Influx.
#management.metrics.export.influx.connect-timeout=1s # Connection timeout for requests to this backend.
#management.metrics.export.influx.consistency=one # Write consistency for each point.
#management.metrics.export.influx.db=apigatewaylogdb # Tag that will be mapped to "host" when shipping metrics to Influx.
#management.metrics.export.influx.enabled=true # Whether exporting of metrics to this backend is enabled.
#management.metrics.export.influx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
#management.metrics.export.influx.password= # Login password of the Influx server.
#management.metrics.export.influx.read-timeout=10s # Read timeout for requests to this backend.
#management.metrics.export.influx.retention-policy= # Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).
#management.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use.
#management.metrics.export.influx.uri=http://localhost:8086 # URI of the Influx server.
#management.metrics.export.influx.user-name= # Login user of the Influx server.

badRequest= "http://localhost:9090/BadRequest/"
