server:
  port: 8080
  footprint: SpringCloudGateway

---
spring:
  cloud:
    gateway:
      #SSL Termination - and overriding default trust store location with a custom cert
      #This is needed if the Gateway routes to https targets
      #      httpclient:
      #        ssl:
      #          trustedX509Certificates:
      #            - cert1.pem
      #            - cert2.pem
      #        #These are TLS Handshake defaults for https targets
      #          handshake-timeout-millis: 10000
      #          close-notify-flush-timeout-millis: 3000
      #          close-notify-read-timeout-millis: 0
      #CORS Configuration
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "localhost"  #change the CORS setting to the right domain/authority
      forwarded-enabled: true
      x-forwarded:
        for-enabled: true
        for-append: true
        host-enabled: true
        host-append: true
        proto-enabled: true
      default-filters:
        - name: Global
      routes:
        - id: appRoute0
          uri: https://talentneuronrecruit.gartner.com
          predicates:
            - Path=/tnr/gInfo/**
          filters:
            - CustomRewritePath=/tnr(?<segment>/?.*), $\{segment} #(replaces /foo/bar with only /bar )
        - id: appRoute1
          uri: https://talentneuronplan.gartner.com
          predicates:
            - Path=/tnp/gInfo/**
            # - Custom   #Remove this line , this was just to illustrate how to build customRoutePredicateFactory
          filters:
            - CustomRewritePath=/tnp(?<segment>/?.*), $\{segment} #(replaces /foo/bar with only /bar )
        - id: appRoute2
          uri: https://junkapp2.xyz.com
          predicates:
            - Path=/junk2/gInfo/**
          filters:
            - CustomRewritePath=/tnhomepage(?<segment>/?.*), $\{segment}
        - id: appRoute3
          uri: https://junkapp3.xyz.com
          predicates:
            - Path=/junk3/gInfo/**
          filters:
            - CustomRewritePath=/tnplan(?<segment>/?.*), $\{segment}

